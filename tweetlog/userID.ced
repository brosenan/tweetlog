'/bootstrap':signature(userID(User)::'/parsing':token(tweetCtx),[User::'/bootstrap':string]).
'/bootstrap':projection(userID(User)::'/parsing':token(tweetCtx),'/bootstrap':horiz(['/bootstrap':label(! (@)),'/bootstrap':vis(User::'/bootstrap':string)])).
'/util':behavior(userID(User)::'/parsing':token(tweetCtx),!'should parse @userids', ('/parsing':parseString('/parsing':tokens(List,tweetCtx),!'I am @boaz @rosenan'),'/util':assertEqual(List,[word(!'I'),word(!am),userID(!boaz),userID(!rosenan)],'/bootstrap':list('/parsing':token(tweetCtx))))).
'/parsing':prod('/parsing':token(userID(User),tweetCtx),'/bootstrap':number,'/parsing':follow('/parsing':char(! (@)),'/parsing':follow(annotation:parentheses('/parsing':bind('/parsing':oneOrMoreMax('/parsing':not(!' ')),Codes)),'/parsing':pred(builtin:charCodes(User,Codes))))).
'/bootstrap':signature(userKey(User)::'/cl1':key,[User::user]).
'/util':behavior(userKey(User)::'/cl1':key,!'should index all processed tweets made by User', ('/cloudlog':withSimulate([tweeted(user(!bob),500,text(!'Hello, World')),tweeted(user(!alice),1000,text(!'Hello, World'))],'/cl1':indexed(userKey(user(!alice)),Tweet)),'/util':assertEqual(Tweet,tweeted(user(!alice),1000,parsedTweet([word(!'Hello,'),word(!'World')])),'/cloudlog':axiom))).
'/cloudlog':axiom('/cloudlog':rule(tweeted(U,Time,T),processTweet(T,TPrime),'/cloudlog':clause('/cl1':indexed(userKey(U),tweeted(U,Time,TPrime)),'/cloudlog':true))).
'/util':behavior(userKey(User)::'/cl1':key,!'should index all processed tweets mentioning User ', ('/cloudlog':withSimulate([tweeted(user(!bob),500,text(!'Hello, @alice'))],'/cl1':indexed(userKey(user(!alice)),Tweet)),'/util':assertEqual(Tweet,tweeted(user(!bob),500,parsedTweet([word(!'Hello,'),userID(!alice)])),'/cloudlog':axiom))).
'/cloudlog':axiom('/cloudlog':rule(tweeted(U1,Time,text(T)), (processTweet(text(T),parsedTweet(TPrime)),'/bootstrap':listMember(userID(U2),'/parsing':token(tweetCtx),TPrime)),'/cloudlog':clause('/cl1':indexed(userKey(user(U2)),tweeted(U1,Time,parsedTweet(TPrime))),'/cloudlog':true))).
